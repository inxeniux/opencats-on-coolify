version: "3.8"

services:
  db:
    image: mysql:5.7
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: opencats
      MYSQL_USER: opencats
      MYSQL_PASSWORD: Trapeador0925         # <- tu pass
      MYSQL_ROOT_PASSWORD: Trapeador0925    # <- tu pass de root
      TZ: America/Mexico_City
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-pTrapeador0925"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 60s

  web:
    # Si tienes Dockerfile en el repo, déjalo. Si no, descomenta la imagen pública.
    build: .
    # image: opencats/opencats:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_NAME: opencats
      DB_USER: opencats
      DB_PASS: Trapeador0925                # <- misma que arriba
      TZ: America/Mexico_City
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 60s

    # === Labels Traefik: crean routers + piden Let's Encrypt ===
    labels:
      - traefik.enable=true

      # Router HTTP (escucha en :80 y redirige a HTTPS)
      - traefik.http.routers.opencats.entrypoints=http
      - traefik.http.routers.opencats.rule=Host(`opencats.inxeniux.com.mx`)
      - traefik.http.middlewares.opencats-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.opencats.middlewares=opencats-https-redirect

      # Router HTTPS (certificado con Let's Encrypt)
      - traefik.http.routers.opencats-secure.entrypoints=https
      - traefik.http.routers.opencats-secure.rule=Host(`opencats.inxeniux.com.mx`)
      - traefik.http.routers.opencats-secure.tls=true
      - traefik.http.routers.opencats-secure.tls.certresolver=letsencrypt

      # Puerto interno del contenedor que Traefik debe enviar (80)
      - traefik.http.services.opencats.loadbalancer.server.port=80

volumes:
  db_data: {}
