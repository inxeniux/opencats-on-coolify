version: "3.9"

services:
  db:
    image: mysql:5.7
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-opencats}
      MYSQL_USER: ${MYSQL_USER:-opencats}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-opencats}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-rootpass}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app_internal

  web:
    # Construye la imagen que ya tienes en el repo (Dockerfile PHP 7.4 + OpenCATS)
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Variables útiles si tu app las lee en el installer
      OPENCATS_DB_HOST: db
      OPENCATS_DB_NAME: ${MYSQL_DATABASE:-opencats}
      OPENCATS_DB_USER: ${MYSQL_USER:-opencats}
      OPENCATS_DB_PASS: ${MYSQL_PASSWORD:-opencats}
    labels:
      - traefik.enable=true
      - traefik.docker.network=coolify

      # === Router HTTP (redirige a HTTPS) ===
      - traefik.http.routers.opencats.rule=Host(`opencats.inxeniux.com.mx`)
      - traefik.http.routers.opencats.entrypoints=http
      - traefik.http.routers.opencats.middlewares=opencats-redirect
      - traefik.http.routers.opencats.service=opencats
      - traefik.http.middlewares.opencats-redirect.redirectscheme.scheme=https

      # === Router HTTPS con ACME ===
      - traefik.http.routers.opencats-sec.rule=Host(`opencats.inxeniux.com.mx`)
      - traefik.http.routers.opencats-sec.entrypoints=https
      - traefik.http.routers.opencats-sec.tls.certresolver=letsencrypt
      - traefik.http.routers.opencats-sec.service=opencats

      # === Servicio (puerto interno del contenedor web)
      - traefik.http.services.opencats.loadbalancer.server.port=80
    restart: unless-stopped
    networks:
      - coolify
      - app
      - app_internal

volumes:
  db-data:

networks:
  # Network donde está traefik (ya existe en tu host)
  coolify:
    external: true
    name: coolify

  # Red de la app (visible si la necesitas para depurar)
  app:
    driver: bridge

  # Red interna para hablar con la DB
  app_internal:
    internal: true
